{"version":3,"sources":["componets/Profile/Profile.module.css","componets/Statistics/Statistics.module.css","componets/FriendList/FriendList.module.css","componets/TransactionHistory/TransactionHistory.module.css","componets/Container/Container.module.css","componets/Container/Container.js","componets/Profile/Profile.js","componets/Statistics/Statistics.js","componets/Statistics/StatisticsList.js","componets/FriendList/FriendListItem.js","componets/FriendList/FriendList.js","componets/TransactionHistory/TransactionHistoryItem.js","componets/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Profile","props","avatar","name","tag","location","followers","views","likes","profile","src","alt","stats","label","quantity","Statistics","percentage","StatisticsList","title","colors","statistics","statList","map","item","index","style","backgroundColor","id","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","friendListItem","TransactionHistoryItem","type","amount","currency","row","TransactionHistory","items","transactionHistory","head","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3347281.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3f8jt\",\"avatar\":\"Profile_avatar__3HENF\",\"name\":\"Profile_name__19tIO\",\"tag\":\"Profile_tag__1Z-oQ\",\"location\":\"Profile_location__1dy6w\",\"label\":\"Profile_label__m6Jo5\",\"quantity\":\"Profile_quantity__1WBUM\",\"stats\":\"Profile_stats__1hzfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1_mfH\",\"title\":\"Statistics_title__1La0_\",\"statList\":\"Statistics_statList__3sSj8\",\"item\":\"Statistics_item__2h-wq\",\"label\":\"Statistics_label__3z9AF\",\"percentage\":\"Statistics_percentage__3u23I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3blUY\",\"friendListItem\":\"FriendList_friendListItem__mJar0\",\"name\":\"FriendList_name__1im4I\",\"avatar\":\"FriendList_avatar__2Krpy\",\"online\":\"FriendList_online__3Fip6\",\"offline\":\"FriendList_offline__2xkAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__PR8mK\",\"head\":\"TransactionHistory_head__3HcPx\",\"title\":\"TransactionHistory_title__pda7L\",\"row\":\"TransactionHistory_row__2XJdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3r4a_\"};","import styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nexport default Container;\n","import styles from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Profile(props) {\n  const { avatar, name, tag, location, followers, views, likes } = props;\n\n  return (\n    <div className={styles.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ label, percentage }) => {\n  return (\n    <>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </>\n  );\n};\nStatistics.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styles from './Statistics.module.css';\nimport Statistics from './Statistics';\nimport PropTypes from 'prop-types';\n\nfunction StatisticsList({ title, stats }) {\n  const colors = ['#F44336', '#4CAF50', '#2196F3', '#E91E63', '#607D8B'];\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map((item, index) => (\n          <li\n            className={styles.item}\n            key={item.id}\n            style={{ backgroundColor: colors[index] }}\n          >\n            <Statistics label={item.label} percentage={item.percentage} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatisticsList.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default StatisticsList;\n","import styles from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <>\n      <span className={isOnline ? styles.online : styles.offline}></span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </>\n  );\n};\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\nexport default FriendListItem;\n","import styles from './FriendList.module.css';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => (\n        <li className={styles.friendListItem} key={friend.id}>\n          <FriendListItem\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import styles from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistoryItem = ({ id, type, amount, currency }) => {\n  return (\n    <tr key={id} className={styles.row}>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionHistoryItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.number.isRequired,\n};\n\nexport default TransactionHistoryItem;\n","import styles from './TransactionHistory.module.css';\nimport TransactionHistoryItem from './TransactionHistoryItem';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead className={styles.head}>\n        <tr>\n          <th className={styles.title}>Type</th>\n          <th className={styles.title}>Amount</th>\n          <th className={styles.title}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>{items.map(TransactionHistoryItem)}</tbody>\n    </table>\n  );\n}\n\nexport default TransactionHistory;\n","import Container from './componets/Container/Container';\nimport user from './componets/Profile/user.json';\nimport Profile from './componets/Profile/Profile';\nimport statisticalData from './componets/Statistics/statistical-data.json';\nimport StatisticksList from './componets/Statistics/StatisticsList';\nimport friends from './componets/FriendList/friends.json';\nimport FriendList from './componets/FriendList/FriendList';\nimport transactions from './componets/TransactionHistory/transactions.json';\nimport TransactionHistory from './componets/TransactionHistory/TransactionHistory';\n\nexport default function App() {\n  return (\n    <Container>\n      <Profile\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n\n      <StatisticksList title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\n/* import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n/* ReactDOM.render(<App />, document.querySelector('#root')); */\n\n/* const user = users; */\n\n/* function User(props) {\n  const { avatar, name, tag, location, followers, views, likes } = props;\n  return (\n    <div class=\"profile\">\n    <div class=\"description\">\n      <img\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        class=\"avatar\"\n      />\n      <p class=\"name\">{name}</p>\n      <p class=\"tag\">@{tag}</p>\n      <p class=\"location\">{location}</p>\n    </div>\n    <ul class=\"stats\">\n      <li>\n        <span class=\"label\">Followers</span>\n        <span class=\"quantity\">{followers}</span>\n      </li>\n      <li>\n        <span class=\"label\">Views</span>\n        <span class=\"quantity\">{views}</span>\n      </li>\n      <li>\n        <span class=\"label\">Likes</span>\n        <span class=\"quantity\">{likes}</span>\n      </li>\n    </ul>\n    </div>\n  );\n} */\n\n/* {\n  <User\n    avatar={user.avatar}\n    name={user.name}\n    tag={user.tag}\n    location={user.location}\n    followers={user.stats.followers}\n    views={user.stats.views}\n    likes={user.stats.likes}\n  />,\n} */\n\n//__________________________________________\n\n/* import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n */\n"],"sourceRoot":""}